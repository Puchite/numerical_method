name: CI/CD pipeline Github-Pages & Docker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        node_version:
          - 12
          - 14
          - 16
        architecture:
          - x64
        # an extra windows-x86 run:
        include:
          - os: windows-2016
            node_version: 14
            architecture: x86
            
    runs-on: ${{ matrix.os }}
    steps:
    
      - name: Checkout
      - uses: actions/checkout@v3
      
      - name: Caching packages data
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
          cache: 'yarn'
          
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Install 
        run: yarn install
                 
      - name: Test
        run: yarn test
        
  build-and-deploy-to-gh-pages :
      needs: [test]
      concurrency: ci-${{ github.ref }} 
      runs-on: ubuntu-latest
      environment: 
        name: Production
        url: https://puchite.github.io/numerical_method/
        
      steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Install
          run: yarn install

        - name: Build
          run: yarn run build
          
        - name: Deploy 
          uses: JamesIves/github-pages-deploy-action@v4.3.3
          with:
            branch: gh-pages 
            folder: build 
            
  build-and-deploy-to-docker:
      needs: [test]
      runs-on: ubuntu-latest
      environment: 
        name: Production
        url: https://hub.docker.com/repository/docker/puchite/numerical_react
        
      steps:    
          - name: Checkout
            uses: actions/checkout@v3

          - name: Install
            run: yarn install
            
          - name: Build
            run: yarn run build
            
          - name: Checkout repository
            uses: actions/checkout@v3
            
          - name: Login to Docker Hub
            uses: docker/login-action@v1
            with:
              username: ${{ secrets.DOCKER_HUB_USERNAME }}
              password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v1
          
          - name: Build and push
            uses: docker/build-push-action@v2
            with:
              context: .
              file: ./Dockerfile
              push: true
              tags: ${{ secrets.DOCKER_HUB_USERNAME }}/numerical_react:latest
            
            
    
#       steps:
#         - uses: actions/checkout@master

#         - name: install packages
#           run: yarn install --frozen-lockfile
        
#         - name: install react-scripts
#           run: yarn add global react-scripts
        
#         - name : test
#           run : yarn test
          
#         - name: Checkout repository
#           uses: actions/checkout@v2

#         - name: Deploy
#           run: |
#             git config --global user.name $user_name
#             git config --global user.email $user_email
#             git remote set-url origin https://${github_token}@github.com/${repository}
#             npm run deploy
            
#         - name: Login to Docker Hub
#           uses: docker/login-action@v1
#           with:
#             username: ${{ secrets.DOCKER_HUB_USERNAME }}
#             password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
#         - name: Set up Docker Buildx
#           uses: docker/setup-buildx-action@v1
          
#         - name: Build and push
#           uses: docker/build-push-action@v2
#           with:
#             context: .
#             file: ./Dockerfile
#             push: true
#             tags: ${{ secrets.DOCKER_HUB_USERNAME }}/numerical_react:latest
            
#   build-and-deploy:
#     needs: [test]
#     runs-on: ubuntu-latest


#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v2

#     - name: Upload coverage to Codecov
#       uses: codecov/codecov-action@v1

#     - name: Build
#       run: yarn run build
      
#   Deploy:
#       needs: [Build]
#       runs-on: ubuntu-latest
      
#       steps:
#         - name: Deploy
#           run: |
#             git config --global user.name $user_name
#             git config --global user.email $user_email
#             git remote set-url origin https://${github_token}@github.com/${repository}
#             npm run deploy
            
#       env:
#         user_name: 'github-actions[bot]'
#         user_email: 'github-actions[bot]@users.noreply.github.com'
#         github_token: ${{ secrets.ACTIONS_DEPLOY_ACCESS_TOKEN }}
#         repository: ${{ github.repository }}
        
#   Docker:
#     needs: [Build]
#     runs-on: ubuntu-latest
    
#     steps:
    
#         - name: Login to Docker Hub
#           uses: docker/login-action@v1
#           with:
#             username: ${{ secrets.DOCKER_HUB_USERNAME }}
#             password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
#         - name: Set up Docker Buildx
#           uses: docker/setup-buildx-action@v1
          
#         - name: Build and push
#           uses: docker/build-push-action@v2
#           with:
#             context: .
#             file: ./Dockerfile
#             push: true
#             tags: ${{ secrets.DOCKER_HUB_USERNAME }}/numerical_react:latest

# name: Build and Deploy
# on: [push]
# permissions: 
#   contents: write
# jobs:
#   build-and-deploy:
#     concurrency: ci-${{ github.ref }} 
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout üõéÔ∏è
#         uses: actions/checkout@v3

#       - name: Install and Build üîß 
#         run: |
#           yarn install
#           yarn run build

#       - name: Deploy üöÄ
#         uses: JamesIves/github-pages-deploy-action@v4.3.3
#         with:
#           branch: gh-pages 
#           folder: build 
        
    
